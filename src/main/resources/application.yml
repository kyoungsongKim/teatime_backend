server:
  #ip: 127.0.0.1 # 설정없이 디폴트 ip 설정.
  port: 9091
  servlet:
    context-path: /
  tomcat:
    max-http-form-post-size: 50MB
logging:
  file:
    path: logs/teatime
  config: config/logback.xml
spring:
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      location: d:\\spring\\temp
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://110.35.173.93/ims_tb
    username: root
    password: ENC(Sp9rC3ZAun+jCeRSV6o/9r57JDO45NHW)
    hikari:
      idle-timeout: 300
      max-lifetime: 300
  jpa:
    show-sql: true
    format_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
    hibernate:
      ddl-auto: none
      #      ddl-auto: update
      jdbc.batch_size: 100
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: false

jwt:
  secret:
    signature: "aafsdzxcvasdfzxbbbasdfzxcvasdfzxcv"

scheduler:
  vacation:
    fixedRate: 30000
    email-send-cron: 0 0 9 * * *

useJwt: true

uploadLocation:
  path: d:\\spring\\upload\\

holiday:
  openApi:
    serviceKey: jwV6WKPafup8qqgOZ%2BtRbkR3lsuAsYJ4bbUyg8QfP9yh3CbEBOkb7n%2BB91U11TK0v2KjGdZ3CIkx0hwhg2vnTQ%3D%3D

cbank:
  #  companyId: vhr_servicefee
  companyId: teatime
  openApi:
    otp:
      url: http://bank.castis.net/cbank/api/v1/otp
    transfer:
      url: http://bank.castis.net/cbank/api/v1/transfer
    viewAccount:
      url: http://bank.castis.net/cbank/api/v1/account/info/
    history:
      url: http://bank.castis.net/cbank/api/v1/account/history

kakao:
  api-key: NCSWVSZSVEPHMDYP
  secret: PVI4TYAMCT3GPPQDKRARO7O7Z3MBT9L3
  pfid: KA01PF220906035048833ynNa3G1G1YN
  messaging:
    template:
      assistance-apply-alarm: KA01TP240119012537734foTq4BqWv70
    url: https://api.coolsms.co.kr
    tel-origin: 01071649777

file-system:
  save-directory: /usr/local/imsfileupload/

# 신입~1년차 = 1년차
# 1년차~2년차 = 2년차
# n년차: 휴가 수 형태로 표기
# n년차 데이터가 존재하지 않는 경우 이전 년차로 거슬러 올라가 휴가 수를 참조
# ex) 2년차 데이터가 없으므로 1년차 휴가 수를 참조
vacation:
  maximum-vacation-rule:
    1: 15
    3: 16
    5: 17
    7: 18
    9: 19
    11: 20
    13: 21
    15: 22
    17: 23
    19: 24
    21: 25
